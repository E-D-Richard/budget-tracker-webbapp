:root {
  --main-text-color-hsl-codes: 227 49% 15%;
  --light-blue-hsl-codes: 234 100% 95%;
  --light-brown-hsl-codes: 40 21% 53%;
}


/* ---------------------------------------- new transaction footer ----------------------- */


  
  .dropdown-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: fixed;
    bottom: 0;
    color: var(--white);
    background: var(--main-text-color);
    box-shadow: var(--shadow);
    padding: 2rem;
    z-index: 0;
    width: 100%;
    /* padding: 2.5% 2.5% calc(2.5% + 10px) 2%; */
    margin-left: -20px;
    margin-right: -20px;
    /* transition */
    transform: translateY(67%);
    transition: all 0.5s;
  }

  .dropdown-container.open {
    transform: translateY(0%);
  }
  
  .dropdown-button {
    color: var(--white);
    background-color: var(--main-text-color);
    border: none;
    padding: 2rem 4rem 1rem 4rem;
    transition: transform 320ms;
  }

  .dropdown-button.mock-hover {
    /* 
    The mock-hover className and state is set in NewTransaction.js inside the button tag.
      mock-hover class is used instead of the built in css:hover selector.
      The reason for this is:
      css:hover state for form button was remaining true even after the form closed/collapsed and cursor no longer rested above the button.
      This issue is caused due to the default behavior of css:hover
      When hovering over an element that is shifted using transform(translate) 
      (in this case: translateY which is used to slide the form down and out of view on form close),
      as long as the cursor isn't moved, the css element will remain in a hovered state since the cursor still remains in the area 
      where the element rested when the mouse entered that elements area.
    */
    cursor: pointer;
    transform: scale(1.25);
  }

  .dropdown-button:active {
    transform: scale(1);
  }

  .dropdown-button .icon {
    font-size: 5rem;
    transform: rotate(0deg);
    transition: transform 0.6s;
  }

  .dropdown-button .icon.down {
    transform: rotate(540deg);
  }


  /* ------------------------------------------------ form settings */

  .new-trans-form {
    display: grid;
    gap: 10px 18px;
    grid-template-columns: repeat(6, minmax(0px, 1fr));
    grid-auto-rows: minmax(0px, auto);
    max-width: 75%;
    padding: 1rem 2rem;
    opacity: 0;
    transition: opacity 0.25s;
  }
  
  .new-trans-form.open {
    opacity: 1;
  }

  .new-trans-form label {
    display: block;
    font-size: 15px;
    font-weight: bold;
    margin-bottom: 8px;
  }
  
  .new-trans-form select {
    text-transform: capitalize;
  }

  .new-trans-form select option {
    font-size: 2rem;
  }

  .new-trans-amount input,
  .new-trans-desc input,
  .new-trans-select select {
    min-height: 35px;
    width: 100%;
  }
  
  form .new-trans-select {
    grid-column: 1/4;
  }
  form .new-trans-amount {
    grid-column: 4/7;
  }
  form .new-trans-desc {
    grid-column: 1/7;
    grid-row: 2/3;
  }
  .new-trans-form .submit-btn {
    grid-column: 1/7;
    font-size: clamp(2rem, 2vw, 3rem);
    font-weight: bold;
    color: #ffffff;
    background-color: #141c3a;
    border-radius: 6px;
    border: solid 1px #ffffff;
    padding: 18px 12px;
    margin-top: 15px;
    cursor: pointer;
  }

  .new-trans-form .submit-btn.prevent {
    opacity: 0.4;
  }

  .new-trans-form .submit-btn.allow {
    opacity: 1;
  }
  

  /* ---------------------------------------------------------new transaction desktop media queries */
  
  /* @media screen and (min-width: 850px) {
    section.new-trans-container h2 {
      display: inline-block;
      margin-bottom: 0;
    }
  

  
    form.new-trans-form {
      row-gap: 0px;
      max-width: 50%;
      margin: 0;
      padding: 0;
    }
  
    form .new-trans-select {
      grid-column: 1/3;
    }
    form .new-trans-amount {
      grid-column: 3/5;
    }
    form .new-trans-desc {
      grid-column: 5/7;
      grid-row: 1/3;
    }
  
    form.new-trans-form .submit-btn:hover,
    form.new-trans-form .submit-btn:focus {
      color: var(--main-text-color);
      background-color: var(--white);
    }
  }
   */